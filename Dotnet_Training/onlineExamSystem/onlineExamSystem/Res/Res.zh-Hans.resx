<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Entity Exam not found!" xml:space="preserve">
    <value>考试信息未找到!</value>
  </data>
  <data name="Entity Result not found!" xml:space="preserve">
    <value>考试结果信息未找到!</value>
  </data>
  <data name="ERROR_OCCURRED" xml:space="preserve">
    <value>未知错误发生，请联系管理员</value>
  </data>
  <data name="EXAM_CLOSED" xml:space="preserve">
    <value>考试已经结束!</value>
  </data>
  <data name="EXAM_NOT_START" xml:space="preserve">
    <value>考试尚未开始!</value>
  </data>
  <data name="INPUT_NOT_EMPTY" xml:space="preserve">
    <value>用户名或密码不能为空!</value>
  </data>
  <data name="INPUT_NOT_NUM" xml:space="preserve">
    <value>请输入有效数字</value>
  </data>
  <data name="Insert current answerStr fail" xml:space="preserve">
    <value>插入当前答案失败</value>
  </data>
  <data name="Insert exam result fail" xml:space="preserve">
    <value>插入考试结果失败</value>
  </data>
  <data name="lblExamStrResult.Text" xml:space="preserve">
    <value>本场考试你得到了 {0} 分，一共做对了 {1} 题</value>
  </data>
  <data name="Login password is incorrect" xml:space="preserve">
    <value>登录密码不正确</value>
  </data>
  <data name="MIN_UNIT" xml:space="preserve">
    <value> 分钟</value>
  </data>
  <data name="No Record On This Condition!" xml:space="preserve">
    <value>此条件下无记录</value>
  </data>
  <data name="NO_CHOOSE_ANSWER" xml:space="preserve">
    <value>请选择一个答案!</value>
  </data>
  <data name="Query question list fail" xml:space="preserve">
    <value>查询问题列表失败</value>
  </data>
  <data name="SUBMIT" xml:space="preserve">
    <value>提交</value>
  </data>
  <data name="TIP_CURRECT_QUESTION" xml:space="preserve">
    <value>恭喜你! 共答对  {0}  道题</value>
  </data>
  <data name="TIP_EXAM_RESULT" xml:space="preserve">
    <value> 考试结果</value>
  </data>
  <data name="txtName.Text" xml:space="preserve">
    <value>请输入关键字</value>
  </data>
  <data name="Username does not exist" xml:space="preserve">
    <value>用户名不存在</value>
  </data>
  <data name="txtPassword.Text" xml:space="preserve">
    <value>密码</value>
  </data>
  <data name="txtUsername.Text" xml:space="preserve">
    <value>用户名</value>
  </data>
  <data name="TIME_START_BEFORE_END" xml:space="preserve">
    <value>开始时间必须小于终点时间</value>
  </data>
  <data name="SET_USER_ICON_SUC" xml:space="preserve">
    <value>设置头像成功</value>
  </data>
  <data name="TIP_AT" xml:space="preserve">
    <value>   </value>
  </data>
  <data name="TIP_ATTEND" xml:space="preserve">
    <value>. 请参加</value>
  </data>
  <data name="TIP_TIME" xml:space="preserve">
    <value> 考试  时间: </value>
  </data>
  <data name="Continue" xml:space="preserve">
    <value>继续</value>
  </data>
  <data name="Do it" xml:space="preserve">
    <value>参加</value>
  </data>
  <data name="No Pass" xml:space="preserve">
    <value>未通过</value>
  </data>
  <data name="Not Attend" xml:space="preserve">
    <value>未参加</value>
  </data>
  <data name="Pass" xml:space="preserve">
    <value>通过</value>
  </data>
  <data name="FileSize exceed, at most 5 M but {0} M" xml:space="preserve">
    <value>当前文件大小超出最大限制(5M)</value>
  </data>
  <data name="Invalid File!" xml:space="preserve">
    <value>非法文件或文件已损坏!</value>
  </data>
  <data name="Not a picture!" xml:space="preserve">
    <value>上传的不是图片，亲!</value>
  </data>
</root>